@model ClothingStore.ViewModels.User.OrderDetailViewModel
@{
    ViewData["Title"] = $"Chi tiết đơn hàng #{Model.Id}";
}
<style>
    /* Order Detail Page Styles - Blue Theme */
.order-detail-page {
    background-color: #f8fafc;
    min-height: 100vh;
    padding: 20px 0;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 15px;
}

/* Breadcrumb */
.breadcrumb-nav {
    margin-bottom: 20px;
}

.breadcrumb-link {
    display: inline-flex;
    align-items: center;
    color: #3b82f6;
    text-decoration: none;
    font-size: 14px;
    padding: 8px 12px;
    border-radius: 8px;
    background-color: #eff6ff;
    transition: all 0.2s;
}

.breadcrumb-link:hover {
    background-color: #dbeafe;
    color: #2563eb;
}

.breadcrumb-link i {
    margin-right: 8px;
    font-size: 12px;
}

/* Order Header Card */
.order-header-card {
    background: linear-gradient(135deg, #3b82f6 0%, #60a5fa 100%);
    border-radius: 16px;
    padding: 30px;
    margin-bottom: 24px;
    color: white;
    box-shadow: 0 10px 25px rgba(59, 130, 246, 0.15);
}

.header-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 30px;
}

.order-info h1 {
    font-size: 28px;
    font-weight: 700;
    margin: 0 0 8px 0;
    display: flex;
    align-items: center;
}

.order-info h1 i {
    margin-right: 12px;
    font-size: 24px;
}

.order-date {
    font-size: 14px;
    opacity: 0.9;
    margin: 0;
    display: flex;
    align-items: center;
}

.order-date i {
    margin-right: 8px;
}

/* Status Badge */
.status-badge {
    padding: 8px 16px;
    border-radius: 20px;
    font-weight: 600;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-pending {
    background-color: #fef3c7;
    color: #d97706;
}

.status-paid {
    background-color: #dcfce7;
    color: #16a34a;
}

.status-shipped {
    background-color: #ddd6fe;
    color: #7c3aed;
}

.status-delivered {
    background-color: #d1fae5;
    color: #059669;
}

.status-cancelled {
    background-color: #fee2e2;
    color: #dc2626;
}

/* Order Progress */
.order-progress {
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
}

.progress-step {
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 2;
    flex: 1;
}

.step-icon {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 12px;
    transition: all 0.3s;
}

.progress-step.completed .step-icon {
    background-color: white;
    color: #3b82f6;
}

.progress-step.current .step-icon {
    background-color: #fbbf24;
    color: white;
    animation: pulse 2s infinite;
}

.step-content {
    text-align: center;
}

.step-content h4 {
    font-size: 14px;
    font-weight: 600;
    margin: 0 0 4px 0;
}

.step-content span {
    font-size: 12px;
    opacity: 0.8;
}

.progress-line {
    height: 2px;
    background-color: rgba(255, 255, 255, 0.3);
    flex: 1;
    margin: 0 10px;
}

.progress-line.completed {
    background-color: white;
}

@@keyframes pulse {
    0% { box-shadow: 0 0 0 0 rgba(251, 191, 36, 0.7); }
    70% { box-shadow: 0 0 0 10px rgba(251, 191, 36, 0); }
    100% { box-shadow: 0 0 0 0 rgba(251, 191, 36, 0); }
}

/* Main Content Layout */
.detail-layout {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 24px;
    margin-bottom: 24px;
}

.info-layout {
    display: grid;
    grid-template-columns: 1fr;
    gap: 24px;
    margin-bottom: 24px;
}

/* Section Headers */
.section-header {
    margin-bottom: 16px;
}

.section-header h2 {
    font-size: 20px;
    font-weight: 600;
    color: #1f2937;
    margin: 0;
    display: flex;
    align-items: center;
}

.section-header h2 i {
    margin-right: 10px;
    color: #3b82f6;
}

/* Order Items Section */
.order-items-section {
    background: white;
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
}

.items-list {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.order-item-card {
    display: flex;
    padding: 16px;
    border: 1px solid #e5e7eb;
    border-radius: 10px;
    background-color: #fafbfc;
    transition: all 0.2s;
}

.order-item-card:hover {
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.1);
    border-color: #3b82f6;
}

.item-image {
    width: 80px;
    height: 80px;
    margin-right: 16px;
    flex-shrink: 0;
}

.item-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
}

.item-info {
    flex: 1;
}

.item-name {
    font-size: 16px;
    font-weight: 600;
    color: #1f2937;
    margin: 0 0 4px 0;
}

.item-category {
    font-size: 14px;
    color: #6b7280;
    margin: 0 0 12px 0;
}

.item-details {
    display: flex;
    align-items: center;
    gap: 16px;
    font-size: 14px;
}

.item-price {
    color: #3b82f6;
    font-weight: 600;
}

.item-quantity {
    color: #6b7280;
}

.item-total {
    color: #059669;
    font-weight: 700;
}

/* Order Summary Section */
.order-summary-section {
    background: white;
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
    height: fit-content;
}

.summary-card {
    background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
    border-radius: 10px;
    padding: 20px;
}

.summary-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 0;
}

.summary-row.total {
    border-top: 2px solid #3b82f6;
    margin-top: 12px;
    padding-top: 16px;
    font-size: 18px;
    font-weight: 700;
    color: #1f2937;
}

/* Info Section */
.info-section {
    background: white;
    border-radius: 12px;
    padding: 24px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
}

.info-card {
    background-color: #f8fafc;
    border-radius: 10px;
    padding: 20px;
}

.customer-info {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.info-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.info-row .label {
    font-weight: 600;
    color: #4b5563;
}

.info-row .value {
    color: #1f2937;
    font-weight: 500;
}

/* Order Actions */
.order-actions {
    display: flex;
    gap: 12px;
    justify-content: center;
    padding: 20px 0;
}

.btn {
    padding: 12px 24px;
    border-radius: 10px;
    border: none;
    font-weight: 600;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 14px;
}

.btn i {
    margin-right: 8px;
}

.btn-primary {
    background: linear-gradient(135deg, #3b82f6 0%, #60a5fa 100%);
    color: white;
}

.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(59, 130, 246, 0.3);
}

.btn-secondary {
    background-color: #6b7280;
    color: white;
}

.btn-secondary:hover {
    background-color: #4b5563;
    transform: translateY(-2px);
}

.btn-danger {
    background-color: #dc2626;
    color: white;
}

.btn-danger:hover {
    background-color: #b91c1c;
    transform: translateY(-2px);
}

/* Responsive Design */
@@media (max-width: 768px) {
    .detail-layout {
        grid-template-columns: 1fr;
    }
    
    .header-content {
        flex-direction: column;
        gap: 16px;
    }
    
    .order-progress {
        flex-wrap: wrap;
        gap: 20px;
    }
    
    .progress-line {
        display: none;
    }
    
    .order-item-card {
        flex-direction: column;
        text-align: center;
    }
    
    .item-image {
        align-self: center;
        margin-right: 0;
        margin-bottom: 12px;
    }
    
    .item-details {
        justify-content: center;
    }
    
    .order-actions {
        flex-direction: column;
        align-items: center;
    }
    
    .btn {
        width: 100%;
        max-width: 300px;
        justify-content: center;
    }
}
</style>
<div class="order-detail-page">
    <div class="container">
        <!-- Breadcrumb -->
        <div class="breadcrumb-nav">
            <a href="@Url.Action("Orders", "User")" class="breadcrumb-link">
                <i class="fas fa-arrow-left"></i>
                Quay lại danh sách đơn hàng
            </a>
        </div>

        <!-- Order Header -->
        <div class="order-header-card">
            <div class="header-content">
                <div class="order-info">
                    <h1>
                        <i class="fas fa-receipt"></i>
                        Đơn hàng #@Model.Id
                    </h1>
                    <p class="order-date">
                        <i class="far fa-calendar-alt"></i>
                        Đặt hàng lúc @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")
                    </p>
                </div>
                <div class="status-section">
                    <span class="status-badge status-@Model.Status.ToLower()">
                        @GetStatusText(Model.Status)
                    </span>
                </div>
            </div>

            <!-- Order Progress -->
            <div class="order-progress">
                <div class="progress-step @(IsStepCompleted("Pending") ? "completed" : "") @(Model.Status == "Pending" ? "current" : "")">
                    <div class="step-icon">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <div class="step-content">
                        <h4>Đã đặt hàng</h4>
                        <span>Đơn hàng đã được tạo</span>
                    </div>
                </div>
                <div class="progress-line @(IsStepCompleted("Paid") ? "completed" : "")"></div>
                <div class="progress-step @(IsStepCompleted("Paid") ? "completed" : "") @(Model.Status == "Paid" ? "current" : "")">
                    <div class="step-icon">
                        <i class="fas fa-credit-card"></i>
                    </div>
                    <div class="step-content">
                        <h4>Đã thanh toán</h4>
                        <span>Thanh toán thành công</span>
                    </div>
                </div>
                <div class="progress-line @(IsStepCompleted("Shipped") ? "completed" : "")"></div>
                <div class="progress-step @(IsStepCompleted("Shipped") ? "completed" : "") @(Model.Status == "Shipped" ? "current" : "")">
                    <div class="step-icon">
                        <i class="fas fa-shipping-fast"></i>
                    </div>
                    <div class="step-content">
                        <h4>Đang giao hàng</h4>
                        <span>Đang trên đường giao</span>
                    </div>
                </div>
                <div class="progress-line @(IsStepCompleted("Delivered") ? "completed" : "")"></div>
                <div class="progress-step @(IsStepCompleted("Delivered") ? "completed" : "") @(Model.Status == "Delivered" ? "current" : "")">
                    <div class="step-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="step-content">
                        <h4>Đã giao hàng</h4>
                        <span>Giao hàng thành công</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="detail-layout">
            <!-- Order Items -->
            <div class="order-items-section">
                <div class="section-header">
                    <h2>
                        <i class="fas fa-box"></i>
                        Sản phẩm trong đơn hàng
                    </h2>
                </div>
                <div class="items-list">
                    @foreach (var item in Model.Items)
                    {
                        <div class="order-item-card">
                            <div class="item-image">
                                <img src="@item.ImageUrl" alt="@item.ProductName" />
                            </div>
                            <div class="item-info">
                                <h3 class="item-name">@item.ProductName</h3>
                                <p class="item-category">Danh mục: @item.CategoryName</p>
                                <div class="item-details">
                                    <span class="item-price">@item.Price.ToString("N0") VNĐ</span>
                                    <span class="item-quantity">x @item.Quantity</span>
                                    <span class="item-total">@((item.Price * item.Quantity).ToString("N0")) VNĐ</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Order Summary -->
            <div class="order-summary-section">
                <div class="section-header">
                    <h2>
                        <i class="fas fa-file-invoice"></i>
                        Tóm tắt đơn hàng
                    </h2>
                </div>
                <div class="summary-card">
                    <div class="summary-row total">
                        <span>Tổng cộng:</span>
                        <span>@Model.TotalAmount.ToString("N0") VNĐ</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Customer Info -->
        <div class="info-layout">
            <!-- Customer Information -->
            <div class="info-section">
                <div class="section-header">
                    <h2>
                        <i class="fas fa-user"></i>
                        Thông tin khách hàng
                    </h2>
                </div>
                <div class="info-card">
                    <div class="customer-info">
                        <div class="info-row">
                            <span class="label">Họ tên:</span>
                            <span class="value">@Model.CustomerName</span>
                        </div>
                        <div class="info-row">
                            <span class="label">Email:</span>
                            <span class="value">@Model.CustomerEmail</span>
                        </div>
                        <div class="info-row">
                            <span class="label">Số điện thoại:</span>
                            <span class="value">@Model.CustomerPhone</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Actions -->
        @if (Model.Status == "Pending")
        {
            <div class="order-actions">
                <button type="button" class="btn btn-danger" onclick="cancelOrder('@Model.Id')">
                    <i class="fas fa-times"></i>
                    Hủy đơn hàng
                </button>
                <a href="@Url.Action("Payment", "Checkout", new { orderId = Model.Id })" class="btn btn-primary">
                    <i class="fas fa-credit-card"></i>
                    Thanh toán
                </a>
            </div>
        }

        @if (Model.Status == "Delivered")
        {
            <div class="order-actions">
                <button type="button" class="btn btn-primary" onclick="showReviewModal('@Model.Id')">
                    <i class="fas fa-star"></i>
                    Đánh giá sản phẩm
                </button>
                <button type="button" class="btn btn-secondary" onclick="reorder('@Model.Id')">
                    <i class="fas fa-redo"></i>
                    Mua lại
                </button>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function cancelOrder(orderId) {
            if (confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')) {
                $.ajax({
                    url: '@Url.Action("CancelOrder", "User")',
                    type: 'POST',
                    data: { id: orderId },
                    success: function(result) {
                        if (result.success) {
                            alert('Đơn hàng đã được hủy thành công!');
                            location.reload();
                        } else {
                            alert('Có lỗi xảy ra: ' + result.message);
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi hủy đơn hàng!');
                    }
                });
            }
        }

        function showReviewModal(orderId) {
            // Logic hiển thị modal đánh giá
            $('#reviewModal').modal('show');
        }

        function reorder(orderId) {
            if (confirm('Bạn có muốn mua lại các sản phẩm trong đơn hàng này?')) {
                $.ajax({
                    url: '@Url.Action("Reorder", "User")',
                    type: 'POST',
                    data: { orderId: orderId },
                    success: function(result) {
                        if (result.success) {
                            alert('Đã thêm sản phẩm vào giỏ hàng!');
                            window.location.href = '@Url.Action("Index", "Cart")';
                        } else {
                            alert('Có lỗi xảy ra: ' + result.message);
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng!');
                    }
                });
            }
        }
    </script>
}

@functions {
    string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Chờ xử lý",
            "Paid" => "Đã thanh toán",
            "Shipped" => "Đang giao hàng",
            "Delivered" => "Đã giao hàng",
            "Cancelled" => "Đã hủy",
            _ => status
        };
    }

    bool IsStepCompleted(string stepStatus)
    {
        var statusOrder = new[] { "Pending", "Paid", "Shipped", "Delivered" };
        var currentIndex = Array.IndexOf(statusOrder, Model.Status);
        var stepIndex = Array.IndexOf(statusOrder, stepStatus);
        return currentIndex >= stepIndex;
    }
}
