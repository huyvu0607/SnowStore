@model ClothingStore.ViewModels.Cart.CheckoutViewModel
@{
    ViewData["Title"] = "Thanh toán";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Cart")">Giỏ hàng</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Thanh toán</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">
                <i class="fas fa-credit-card me-2"></i>Thanh toán đơn hàng
            </h2>
        </div>
    </div>

    @using (Html.BeginForm("ProcessCheckout", "Cart", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-lg-8">
                <!-- Thông tin giao hàng -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-truck me-2"></i>Thông tin giao hàng
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(m => m.CustomerName, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(m => m.CustomerPhone, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.CustomerPhone, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 mb-3">
                                @Html.LabelFor(m => m.CustomerEmail, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.CustomerEmail, new { @class = "form-control", type = "email", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 mb-3">
                                @Html.LabelFor(m => m.ShippingAddress, new { @class = "form-label" })
                                @Html.TextAreaFor(m => m.ShippingAddress, new { @class = "form-control", rows = "3", required = "required", placeholder = "Nhập địa chỉ giao hàng chi tiết..." })
                                @Html.ValidationMessageFor(m => m.ShippingAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 mb-3">
                                @Html.LabelFor(m => m.Notes, new { @class = "form-label" })
                                @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", rows = "2", placeholder = "Ghi chú thêm (tùy chọn)..." })
                                @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Phương thức thanh toán -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-credit-card me-2"></i>Phương thức thanh toán
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-check border rounded p-3">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="cod" checked>
                                    <label class="form-check-label" for="cod">
                                        <i class="fas fa-money-bill-wave text-success me-2"></i>
                                        <strong>Thanh toán khi nhận hàng (COD)</strong>
                                        <small class="d-block text-muted mt-1">Thanh toán bằng tiền mặt khi nhận hàng</small>
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-check border rounded p-3">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="banking" value="banking">
                                    <label class="form-check-label" for="banking">
                                        <i class="fas fa-university text-primary me-2"></i>
                                        <strong>Chuyển khoản ngân hàng</strong>
                                        <small class="d-block text-muted mt-1">Chuyển khoản trước khi giao hàng</small>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <!-- Đơn hàng của bạn -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-shopping-bag me-2"></i>Đơn hàng của bạn
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Danh sách sản phẩm -->
                        <div class="mb-3" style="max-height: 300px; overflow-y: auto;">
                            @foreach (var item in Model.Cart.Items)
                            {
                                <div class="d-flex align-items-center mb-3 pb-2 border-bottom">
                                    <div class="me-3">
                                        <img src="@item.ImageUrl" alt="@item.ProductName"
                                             class="rounded" style="width: 50px; height: 50px; object-fit: cover;">
                                    </div>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-0 small">@item.ProductName</h6>
                                        <small class="text-muted">
                                            @item.Price.ToString("N0")₫ x @item.Quantity
                                        </small>
                                        @if (!string.IsNullOrEmpty(item.Size) || !string.IsNullOrEmpty(item.Color))
                                        {
                                            <div>
                                                @if (!string.IsNullOrEmpty(item.Size))
                                                {
                                                    <span class="badge bg-light text-dark me-1" style="font-size: 0.7rem;">@item.Size</span>
                                                }
                                                @if (!string.IsNullOrEmpty(item.Color))
                                                {
                                                    <span class="badge bg-light text-dark" style="font-size: 0.7rem;">@item.Color</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                    <div class="text-end">
                                        <strong class="text-primary">@item.SubTotal.ToString("N0")₫</strong>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Tóm tắt giá -->
                        <div class="border-top pt-3">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Tạm tính:</span>
                                <span>@Model.Cart.TotalAmount.ToString("N0")₫</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Phí vận chuyển:</span>
                                <span class="text-success">Miễn phí</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Thuế:</span>
                                <span>Đã bao gồm</span>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between">
                                <strong>Tổng cộng:</strong>
                                <strong class="text-primary fs-5">@Model.Cart.TotalAmount.ToString("N0")₫</strong>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Nút đặt hàng -->
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary btn-lg" id="btn-place-order">
                        <i class="fas fa-check-circle me-2"></i>Đặt hàng ngay
                    </button>
                    <a href="@Url.Action("Index", "Cart")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Quay lại giỏ hàng
                    </a>
                </div>

                <!-- Thông tin bảo mật -->
                <div class="mt-3 text-center">
                    <small class="text-muted">
                        <i class="fas fa-shield-alt text-success me-1"></i>
                        Thông tin của bạn được bảo mật tuyệt đối
                    </small>
                </div>
            </div>
        </div>
    }
</div>

<!-- Modal xác nhận đặt hàng -->
<div class="modal fade" id="confirmOrderModal" tabindex="-1" aria-labelledby="confirmOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmOrderModalLabel">Xác nhận đặt hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn đặt hàng với tổng giá trị <strong class="text-primary">@Model.Cart.TotalAmount.ToString("N0")₫</strong>?</p>
                <p class="text-muted small">Sau khi đặt hàng, bạn sẽ nhận được email xác nhận và có thể theo dõi tình trạng đơn hàng trong tài khoản của mình.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="btn-confirm-order">
                    <i class="fas fa-check me-1"></i>Xác nhận đặt hàng
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Loading overlay -->
<div id="loading-overlay" class="position-fixed w-100 h-100 top-0 start-0 d-none"
     style="background: rgba(0,0,0,0.5); z-index: 9999;">
    <div class="d-flex justify-content-center align-items-center h-100">
        <div class="spinner-border text-light" role="status">
            <span class="visually-hidden">Đang xử lý...</span>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Form validation
            $('.needs-validation').on('submit', function (e) {
                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                $(this).addClass('was-validated');
            });

            // Show confirmation modal before submit
            $('#btn-place-order').on('click', function (e) {
                e.preventDefault();

                // Validate form first
                const form = $('.needs-validation')[0];
                if (form.checkValidity()) {
                    $('#confirmOrderModal').modal('show');
                } else {
                    form.classList.add('was-validated');
                }
            });

            // Confirm order
            $('#btn-confirm-order').on('click', function () {
                $('#confirmOrderModal').modal('hide');
                $('#loading-overlay').removeClass('d-none');

                // Submit form
                $('.needs-validation').off('submit').submit();
            });

            // Payment method change
            $('input[name="paymentMethod"]').on('change', function () {
                // You can add specific logic for different payment methods here
                if ($(this).val() === 'banking') {
                    // Show banking info or additional fields
                }
            });
        });
    </script>
}