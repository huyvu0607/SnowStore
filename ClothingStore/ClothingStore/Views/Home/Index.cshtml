@model IEnumerable<ClothingStore.Models.Product>

@{
    ViewData["Title"] = "SnowClothes - Shop Thời Trang Mùa Đông";
    var categories = ViewBag.Categories as List<ClothingStore.Models.Category>;
    var currentCategoryId = ViewBag.CurrentCategoryId as int?;
    var searchTerm = ViewBag.SearchTerm as string;
}

<!-- Anti-forgery token for AJAX calls -->
@Html.AntiForgeryToken()
<style>
/* Popup Overlay */
.popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
}

.popup-overlay.show {
    opacity: 1;
    visibility: visible;
}

/* Popup Content */
.popup-content {
    background: white;
    border-radius: 20px;
    max-width: 900px;
    width: 95%;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
    transform: scale(0.7);
    transition: transform 0.3s ease;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
}

.popup-overlay.show .popup-content {
    transform: scale(1);
}

.popup-inner {
    padding: 2rem;
}

/* Close Button */
.popup-close {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 40px;
    height: 40px;
    border: none;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.1);
    color: #666;
    cursor: pointer;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.popup-close:hover {
    background: rgba(0, 0, 0, 0.2);
    color: #333;
    transform: rotate(90deg);
}

/* Loading State */
.popup-loading {
    text-align: center;
    padding: 3rem;
    color: #666;
}

.popup-loading .spinner-border {
    width: 3rem;
    height: 3rem;
    margin-bottom: 1rem;
}

/* Product Title */
.product-title {
    color: var(--deep-blue, #2c5aa0);
    font-weight: 700;
    margin-bottom: 1rem;
    font-size: 1.8rem;
}

/* Product Meta */
.product-meta {
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;
}

.category-badge {
    background: var(--ice-blue, #f0f8ff);
    color: var(--deep-blue, #2c5aa0);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.stock-status.in-stock {
    color: #28a745;
    font-weight: 600;
}

.stock-status.low-stock {
    color: #fd7e14;
    font-weight: 600;
}

.stock-status.out-of-stock {
    color: #dc3545;
    font-weight: 600;
}

/* Product Price */
.product-price {
    font-size: 2rem;
    font-weight: 700;
    color: var(--winter-blue, #4A90E2);
}

/* Product Details */
.detail-row {
    margin-bottom: 0.5rem;
    padding: 0.5rem 0;
    border-bottom: 1px solid #eee;
}

.detail-row:last-child {
    border-bottom: none;
}

.detail-row strong {
    color: var(--deep-blue, #2c5aa0);
    min-width: 100px;
    display: inline-block;
}

/* Image Gallery */
.product-image-gallery {
    margin-bottom: 2rem;
}

.main-image img {
    width: 100%;
    height: 400px;
    object-fit: cover;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.image-thumbnails {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
    justify-content: center;
}

.thumbnail-image {
    width: 60px;
    height: 60px;
    border-radius: 8px;
    cursor: pointer;
    border: 2px solid transparent;
    transition: all 0.3s ease;
    object-fit: cover;
}

.thumbnail-image:hover,
.thumbnail-image.active {
    border-color: var(--winter-blue, #4A90E2);
    transform: scale(1.1);
}

/* Quantity Controls */
.quantity-section {
    text-align: center;
}

.quantity-controls {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin: 0.5rem 0;
}

.qty-btn {
    width: 40px;
    height: 40px;
    border: 2px solid var(--frost-blue, #87CEEB);
    background: white;
    color: var(--deep-blue, #2c5aa0);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 600;
}

.qty-btn:hover {
    background: var(--frost-blue, #87CEEB);
    color: white;
    transform: scale(1.1);
}

.qty-input {
    width: 80px;
    height: 40px;
    text-align: center;
    border: 2px solid var(--frost-blue, #87CEEB);
    border-radius: 10px;
    font-weight: 600;
    font-size: 1.1rem;
    color: var(--deep-blue, #2c5aa0);
}

.qty-input:focus {
    outline: none;
    border-color: var(--winter-blue, #4A90E2);
    box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
}

/* Action Buttons */
.action-buttons {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 2rem;
}

.btn-cart {
    padding: 1rem 2rem;
    border: none;
    border-radius: 25px;
    font-weight: 700;
    font-size: 1.1rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.8rem;
    min-height: 60px;
}

.btn-add-to-cart {
    background: linear-gradient(135deg, var(--winter-blue, #4A90E2), var(--frost-blue, #87CEEB));
    color: white;
}

.btn-add-to-cart:hover {
    background: var(--deep-blue, #2c5aa0);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(74, 144, 226, 0.4);
}

.btn-buy-now {
    background: linear-gradient(135deg, #ff6b6b, #ee5a52);
    color: white;
}

.btn-buy-now:hover {
    background: linear-gradient(135deg, #ff5252, #e53935);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
}

.btn-out-of-stock {
    background: #e0e0e0;
    color: #9e9e9e;
    cursor: not-allowed;
}

.btn-notify-stock {
    background: white;
    color: var(--deep-blue, #2c5aa0);
    border: 2px solid var(--frost-blue, #87CEEB);
}

.btn-notify-stock:hover {
    background: var(--frost-blue, #87CEEB);
    color: white;
}

.btn-cart:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
}

.btn-cart.loading {
    pointer-events: none;
}

.btn-cart.loading i {
    animation: spin 1s linear infinite;
}

@@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Responsive */
@@media (max-width: 768px) {
    .popup-content {
        width: 98%;
        margin: 1rem;
        max-height: 95vh;
    }
    
    .popup-inner {
        padding: 1rem;
    }
    
    .main-image img {
        height: 250px;
    }
    
    .product-title {
        font-size: 1.4rem;
    }
    
    .product-price {
        font-size: 1.5rem;
    }
    
    .action-buttons {
        flex-direction: row;
        gap: 0.5rem;
    }
    
    .btn-cart {
        font-size: 0.9rem;
        padding: 0.8rem 1rem;
        min-height: 50px;
    }
    
    .btn-cart span {
        display: none;
    }
}

@@media (max-width: 480px) {
    .action-buttons {
        flex-direction: column;
    }
    
    .btn-cart span {
        display: inline;
        font-size: 0.8rem;
    }
}
</style>
<!-- Categories Filter -->
<div class="categories-section">
    <div class="container">
        <div class="categories-title">
            <i class="fas fa-snowflake"></i>
            Danh mục sản phẩm
        </div>
        <div class="categories-list">
            <a href="@Url.Action("Index", new { searchTerm = searchTerm })"
               class="category-btn @(currentCategoryId == null ? "active" : "")">
                <i class="fas fa-th-large"></i>
                Tất cả
            </a>
            @if (categories != null)
            {
                @foreach (var category in categories)
                {
                    <a href="@Url.Action("Index", new { categoryId = category.CategoryId, searchTerm = searchTerm })"
                       class="category-btn @(currentCategoryId == category.CategoryId ? "active" : "")">
                        <i class="fas fa-tag"></i>
                        @category.CategoryName
                    </a>
                }
            }
        </div>
    </div>
</div>

<!-- Products Section -->
<div class="container">
    <div class="products-section">
        <!-- Section Header -->
        <div class="section-header">
            <div class="container">
                <h1 class="section-title">
                    <i class="fas fa-tshirt"></i>
                    Bộ sưu tập Wave To Earth
                </h1>
                <p class="section-subtitle">
                    Khám phá những món đồ thời trang và phong cách 
                    (@Model.Count() sản phẩm)
                </p>
            </div>
        </div>

        @if (Model.Any())
        {
            <div class="products-grid">
                @foreach (var product in Model)
                {
                    var primaryImage = product.ProductImages?.FirstOrDefault(pi => pi.IsPrimary == true)
                    ?? product.ProductImages?.FirstOrDefault();

                    <div class="product-card fade-in" 
                         style="animation-delay: @(Model.ToList().IndexOf(product) * 0.1)s"
                         data-product-id="@product.ProductId">
                        
                        <div class="product-image-container" onclick="openProductPopup(@product.ProductId)">
                            @if (primaryImage != null)
                            {
                                <img src="@primaryImage.ImageUrl" 
                                     alt="@product.ProductName" 
                                     class="product-image"
                                     loading="lazy">
                            }
                            else
                            {
                                <div class="product-image no-image">
                                    <i class="fas fa-image"></i>
                                    <span>Không có hình ảnh</span>
                                </div>
                            }
                            
                            <!-- Product overlay on hover -->
                            <div class="product-overlay">
                                <div class="overlay-actions">
                                    <button class="action-btn view-btn" onclick="event.stopPropagation(); openProductPopup(@product.ProductId)">
                                        <i class="fas fa-eye"></i>
                                        Xem chi tiết
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="product-info">
                            <h3 class="product-name" title="@product.ProductName">
                                @product.ProductName
                            </h3>
                            
                            <div class="product-price">
                                @product.Price.ToString("N0") ₫
                            </div>
                            
                            <div class="product-meta">
                                <span class="product-category">
                                    <i class="fas fa-tag"></i>
                                    @product.Category?.CategoryName
                                </span>
                                
                                @if (product.StockQuantity.HasValue)
                                {
                                    <span class="stock-info @(product.StockQuantity > 10 ? "stock-ok" : product.StockQuantity > 0 ? "stock-low" : "stock-out")">
                                        @if (product.StockQuantity > 0)
                                        {
                                            <i class="fas fa-check-circle"></i>
                                            <span>Còn @product.StockQuantity</span>
                                        }
                                        else
                                        {
                                            <i class="fas fa-times-circle"></i>
                                            <span>Hết hàng</span>
                                        }
                                    </span>
                                }
                            </div>

                            <!-- Additional product info -->
                            <div class="product-details">
                                @if (!string.IsNullOrEmpty(product.Size))
                                {
                                    <span class="detail-tag">
                                        <i class="fas fa-ruler"></i>
                                        @product.Size
                                    </span>
                                }
                                @if (!string.IsNullOrEmpty(product.Color))
                                {
                                    <span class="detail-tag">
                                        <i class="fas fa-palette"></i>
                                        @product.Color
                                    </span>
                                }
                            </div>

                            @* <!-- Cart Actions -->
                            <div class="product-actions">
                                @if (product.StockQuantity > 0 && product.IsActive.GetValueOrDefault())
                                {
                                    <div class="quantity-selector">
                                        <button type="button" class="qty-btn qty-decrease" onclick="updateQuantity(@product.ProductId, -1)">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="number" class="qty-input" id="qty-@product.ProductId" 
                                               value="1" min="1" max="@product.StockQuantity" readonly>
                                        <button type="button" class="qty-btn qty-increase" onclick="updateQuantity(@product.ProductId, 1)">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>

                                    <div class="action-buttons">
                                        <button type="button" class="btn-add-cart" 
                                                onclick="addToCartFromList(@product.ProductId)"
                                                data-product-id="@product.ProductId">
                                            <i class="fas fa-cart-plus"></i>
                                            <span class="btn-text">Thêm vào giỏ</span>
                                        </button>
                                        
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <button type="button" class="btn-buy-now" 
                                                    onclick="buyNowFromList(@product.ProductId)"
                                                    data-product-id="@product.ProductId">
                                                <i class="fas fa-bolt"></i>
                                                <span class="btn-text">Mua ngay</span>
                                            </button>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="out-of-stock-actions">
                                        <button type="button" class="btn-out-of-stock" disabled>
                                            <i class="fas fa-times"></i>
                                            Hết hàng
                                        </button>
                                        <button type="button" class="btn-notify" onclick="notifyWhenAvailable(@product.ProductId)">
                                            <i class="fas fa-bell"></i>
                                            Báo khi có hàng
                                        </button>
                                    </div>
                                }
                            </div> *@
                        </div>
                    </div>
                }
            </div>

            <!-- Load more button (if needed for pagination) -->
            @if (ViewBag.HasMoreProducts == true)
            {
                <div class="load-more-section">
                    <button class="load-more-btn" onclick="loadMoreProducts()">
                        <i class="fas fa-plus"></i>
                        Xem thêm sản phẩm
                    </button>
                </div>
            }
        }
        else
        {
            <!-- Empty State -->
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-snowman"></i>
                </div>
                <h3>Không tìm thấy sản phẩm</h3>
                <p>
                    @if (!string.IsNullOrEmpty(searchTerm))
                    {
                        <span>Không có sản phẩm nào phù hợp với từ khóa "<strong>@searchTerm</strong>"</span>
                    }
                    else if (currentCategoryId.HasValue)
                    {
                        <span>Danh mục này hiện chưa có sản phẩm nào</span>
                    }
                    else
                    {
                        <span>Hiện tại chưa có sản phẩm nào</span>
                    }
                </p>
                <div class="empty-actions">
                    <a href="@Url.Action("Index")" class="btn-primary">
                        <i class="fas fa-home"></i>
                        Về trang chủ
                    </a>
                    @if (!string.IsNullOrEmpty(searchTerm) || currentCategoryId.HasValue)
                    {
                        <a href="@Url.Action("Index")" class="btn-secondary">
                            <i class="fas fa-times"></i>
                            Xóa bộ lọc
                        </a>
                    }
                </div>
            </div>
        }
    </div>
</div>

<!-- Product Detail Popup Modal -->
<div id="productPopup" class="popup-overlay" onclick="closeProductPopup(event)">
    <div class="popup-content" onclick="event.stopPropagation()">
        <button class="popup-close" onclick="closeProductPopup()">
            <i class="fas fa-times"></i>
        </button>

        <div class="popup-inner">
            <!-- Loading state -->
            <div id="popup-loading" class="popup-loading">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Đang tải...</span>
                </div>
                <p>Đang tải thông tin sản phẩm...</p>
            </div>

            <!-- Product content (will be populated by JavaScript) -->
            <div id="popup-product-content" class="popup-product-content d-none">
                <div class="row">
                    <!-- Product Images -->
                    <div class="col-lg-6">
                        <div class="product-image-gallery">
                            <div class="main-image">
                                <img id="popup-main-image" src="" alt="" class="img-fluid rounded">
                            </div>
                            <div class="image-thumbnails" id="popup-thumbnails">
                                <!-- Thumbnails will be populated by JavaScript -->
                            </div>
                        </div>
                    </div>

                    <!-- Product Info -->
                    <div class="col-lg-6">
                        <div class="product-info-section">
                            <h2 id="popup-product-name" class="product-title"></h2>

                            <div class="product-meta mb-3">
                                <span class="category-badge" id="popup-category">
                                    <i class="fas fa-tag"></i>
                                    <span></span>
                                </span>
                                <span class="stock-status" id="popup-stock">
                                    <!-- Stock info will be populated -->
                                </span>
                            </div>

                            <div class="product-price mb-4">
                                <span class="current-price" id="popup-price"></span>
                            </div>

                            <div class="product-description mb-4">
                                <h5>Mô tả sản phẩm</h5>
                                <p id="popup-description">Chưa có mô tả chi tiết cho sản phẩm này.</p>
                            </div>

                            <div class="product-details mb-4">
                                <div class="detail-row" id="popup-size-row">
                                    <strong>Kích thước:</strong>
                                    <span id="popup-size"></span>
                                </div>
                                <div class="detail-row" id="popup-color-row">
                                    <strong>Màu sắc:</strong>
                                    <span id="popup-color"></span>
                                </div>
                                <div class="detail-row" id="popup-material-row">
                                    <strong>Chất liệu:</strong>
                                    <span id="popup-material"></span>
                                </div>
                            </div>

                            <!-- Cart Actions -->
                            <div class="cart-actions-section">
                                <div class="quantity-section mb-3">
                                    <label class="form-label">Số lượng:</label>
                                    <div class="quantity-controls">
                                        <button type="button" class="qty-btn qty-decrease" id="popup-qty-decrease">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="number" class="qty-input" id="popup-quantity"
                                               value="1" min="1" max="1">
                                        <button type="button" class="qty-btn qty-increase" id="popup-qty-increase">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                    <small class="text-muted">Còn <span id="popup-stock-count">0</span> sản phẩm</small>
                                </div>

                                <div class="action-buttons">
                                    <button type="button" class="btn-cart btn-add-to-cart" id="popup-add-to-cart"
                                            onclick="addToCartFromPopup()">
                                        <i class="fas fa-cart-plus"></i>
                                        <span>Thêm vào giỏ hàng</span>
                                    </button>

                                    <button type="button" class="btn-cart btn-buy-now" id="popup-buy-now"
                                            onclick="buyNowFromPopup()">
                                        <i class="fas fa-bolt"></i>
                                        <span>Mua ngay</span>
                                    </button>
                                </div>

                                <div class="out-of-stock-section d-none" id="popup-out-of-stock">
                                    <button type="button" class="btn-cart btn-out-of-stock" disabled>
                                        <i class="fas fa-times"></i>
                                        <span>Hết hàng</span>
                                    </button>
                                    <button type="button" class="btn-cart btn-notify-stock" onclick="notifyWhenAvailable()">
                                        <i class="fas fa-bell"></i>
                                        <span>Thông báo khi có hàng</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Floating Winter Elements -->
<div class="winter-elements">
    <!-- Decorative snowflakes -->
    <div class="floating-snowflake" style="top: 20%; left: 10%; animation-delay: 0s;">❄</div>
    <div class="floating-snowflake" style="top: 60%; left: 85%; animation-delay: 2s;">❅</div>
    <div class="floating-snowflake" style="top: 80%; left: 20%; animation-delay: 4s;">❄</div>
</div>

@section Scripts {
    <script src="~/js/snowclothes.js"></script>
    <script src="~/js/cart.js"></script>
    
    <script>
        // Cart integration functions
        
        // Update quantity for a specific product
        window.updateQuantity = function(productId, change) {
            const qtyInput = document.getElementById(`qty-${productId}`);
            const currentQty = parseInt(qtyInput.value);
            const maxQty = parseInt(qtyInput.max);
            const minQty = parseInt(qtyInput.min);
            
            let newQty = currentQty + change;
            
            if (newQty > maxQty) {
                newQty = maxQty;
                showToast('Đã đạt số lượng tối đa!', 'warning');
            } else if (newQty < minQty) {
                newQty = minQty;
            }
            
            qtyInput.value = newQty;
        };
        
        // Add to cart from product list
        window.addToCartFromList = function (productId) {
            if (!isUserAuthenticated()) {
                showLoginModal();
                return;
            }

            const qtyInput = document.getElementById(`qty-${productId}`);
            const quantity = parseInt(qtyInput.value);
            const button = document.querySelector(`[data-product-id="${productId}"].btn-add-cart`);
            const originalContent = button.innerHTML;

            // Show loading state
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i><span class="btn-text">Đang thêm...</span>';
            button.disabled = true;

            $.ajax({
                url: '/Cart/AddToCart',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    ProductId: productId,
                    Quantity: quantity
                }),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        showToast(response.message, 'success');

                        // QUAN TRỌNG: Cập nhật cart count ngay lập tức
                        updateCartBadge(response.cartCount);

                        // Reset quantity to 1
                        qtyInput.value = 1;

                        // Add visual feedback
                        button.classList.add('success-flash');
                        setTimeout(() => {
                            button.classList.remove('success-flash');
                        }, 1000);
                    } else {
                        showToast(response.message, 'error');
                    }
                },
                error: function () {
                    showToast('Có lỗi xảy ra, vui lòng thử lại!', 'error');
                },
                complete: function () {
                    // Restore button state
                    button.innerHTML = originalContent;
                    button.disabled = false;
                }
            });
        };
        
        // Buy now from product list
        window.buyNowFromList = function(productId) {
            if (!isUserAuthenticated()) {
                showLoginModal();
                return;
            }

            const qtyInput = document.getElementById(`qty-${productId}`);
            const quantity = parseInt(qtyInput.value);
            const button = document.querySelector(`[data-product-id="${productId}"].btn-buy-now`);
            const originalContent = button.innerHTML;
            
            // Show loading state
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i><span class="btn-text">Đang xử lý...</span>';
            button.disabled = true;
            
            $.ajax({
                url: '/Cart/AddToCart',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    ProductId: productId,
                    Quantity: quantity
                }),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        // Redirect to checkout immediately
                        window.location.href = '/Cart/Checkout';
                    } else {
                        showToast(response.message, 'error');
                        button.innerHTML = originalContent;
                        button.disabled = false;
                    }
                },
                error: function() {
                    showToast('Có lỗi xảy ra, vui lòng thử lại!', 'error');
                    button.innerHTML = originalContent;
                    button.disabled = false;
                }
            });
        };
        
        // Notify when available (placeholder)
        window.notifyWhenAvailable = function(productId) {
            if (!isUserAuthenticated()) {
                showLoginModal();
                return;
            }
            
            showToast('Tính năng thông báo khi có hàng sẽ được cập nhật sớm!', 'info');
        };
        
        // Check if user is authenticated
        function isUserAuthenticated() {
            return @(User.Identity.IsAuthenticated ? "true" : "false");
        }
        
        // Show login modal or redirect to login
        function showLoginModal() {
            if (confirm('Bạn cần đăng nhập để sử dụng giỏ hàng. Chuyển đến trang đăng nhập?')) {
                window.location.href = '/Account/Login?returnUrl=' + encodeURIComponent(window.location.href);
            }
        }
        
        // Additional inline scripts for specific page functionality
        
        // Load more products function
        window.loadMoreProducts = function() {
            const button = document.querySelector('.load-more-btn');
            const originalText = button.innerHTML;
            
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang tải...';
            button.disabled = true;
            
            // Here you would make an AJAX call to load more products
            // Example implementation:
            setTimeout(() => {
                // Simulate loading more products
                button.innerHTML = originalText;
                button.disabled = false;
                
                // You could append new products to the grid here
                console.log('Loading more products...');
            }, 2000);
        };
        
        // Close popup function
        window.closePopup = function(event) {
            if (event.target.classList.contains('popup-overlay')) {
                closeProductPopup();
            }
        };
        
        // Search enhancement for this page
        document.addEventListener('DOMContentLoaded', function() {
            // Add search result highlighting if there's a search term
            const searchTerm = '@Html.Raw(searchTerm)';
            if (searchTerm && searchTerm.length > 0) {
                highlightSearchResults(searchTerm);
            }
            
            // Add category active state persistence
            persistCategoryState();
            
            // Initialize product animations
            initializeProductAnimations();
            
            // Update cart badge on page load
            updateCartCount();
        });
        
        function highlightSearchResults(term) {
            const productNames = document.querySelectorAll('.product-name');
            productNames.forEach(element => {
                const text = element.textContent;
                const regex = new RegExp(`(${term})`, 'gi');
                const highlighted = text.replace(regex, '<mark style="background: var(--frost-blue); color: var(--deep-blue); padding: 0.1em 0.2em; border-radius: 3px;">$1</mark>');
                element.innerHTML = highlighted;
            });
        }
        
        function persistCategoryState() {
            // Add visual feedback for active category
            const activeCategory = document.querySelector('.category-btn.active');
            if (activeCategory) {
                activeCategory.style.boxShadow = '0 4px 12px rgba(74, 144, 226, 0.3)';
            }
        }
        
        function initializeProductAnimations() {
            // Add intersection observer for product cards
            if ('IntersectionObserver' in window) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add('animate-in');
                            observer.unobserve(entry.target);
                        }
                    });
                }, {
                    threshold: 0.1,
                    rootMargin: '0px 0px -50px 0px'
                });
                
                document.querySelectorAll('.product-card').forEach(card => {
                    observer.observe(card);
                });
            }
        }
        
        // Analytics tracking (optional)
        function trackProductView(productId, productName) {
            // Track product views for analytics
            console.log('Product viewed:', { id: productId, name: productName });
            
            // Example: Google Analytics
            // gtag('event', 'view_item', {
            //     'item_id': productId,
            //     'item_name': productName,
            //     'item_category': 'Clothing'
            // });
        }
        
        // Override the openProductPopup to include analytics
        const originalOpenProductPopup = window.openProductPopup;
        if (originalOpenProductPopup) {
            window.openProductPopup = function(productId) {
                // Find product name for tracking
                const productCard = document.querySelector(`[data-product-id="${productId}"]`);
                const productName = productCard ? productCard.querySelector('.product-name').textContent : 'Unknown';
                
                trackProductView(productId, productName);
                
                // Call original function
                return originalOpenProductPopup(productId);
            };
        }
    </script>
    
    <!-- Additional CSS for cart integration -->
    <style>
        .winter-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
            overflow: hidden;
        }
        
        .floating-snowflake {
            position: absolute;
            font-size: 1.5rem;
            color: rgba(135, 206, 235, 0.4);
            animation: float 6s ease-in-out infinite;
            pointer-events: none;
        }
        
        @@keyframes float {
            0%, 100% {
                transform: translateY(0px) rotate(0deg);
                opacity: 0.4;
            }
            50% {
                transform: translateY(-20px) rotate(180deg);
                opacity: 0.8;
            }
        }
        
        .animate-in {
            animation: slideInUp 0.6s ease forwards;
        }
        
        @@keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .product-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(74, 144, 226, 0.9), rgba(44, 90, 160, 0.9));
            opacity: 0;
            visibility: hidden; /* THÊM: Ẩn hoàn toàn khi không hover */
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 15px 15px 0 0;
            pointer-events: none; /* QUAN TRỌNG: Không chặn click ban đầu */
            z-index: 2; /* Đảm bảo nằm trên nhưng không can thiệp */
        }

        .product-card:hover .product-overlay {
            opacity: 1;
            visibility: visible; /* THÊM: Hiện khi hover */
            pointer-events: auto; /* CHỈ cho phép tương tác khi hover */
        }

        .overlay-actions {
            transform: translateY(20px);
            transition: transform 0.3s ease;
            pointer-events: auto; /* Đảm bảo nút vẫn click được */
        }

        .product-card:hover .overlay-actions {
            transform: translateY(0);
        }
        
        .no-image {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: var(--text-light);
            background: var(--ice-blue);
        }
        
        .no-image i {
            font-size: 2rem;
            margin-bottom: 0.5rem;
            color: var(--frost-blue);
        }
        
        .product-details {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.5rem;
            flex-wrap: wrap;
        }
        
        .detail-tag {
            background: var(--ice-blue);
            color: var(--deep-blue);
            padding: 0.2rem 0.6rem;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }
        
        .detail-tag i {
            font-size: 0.7rem;
        }
        
        /* Cart Integration Styles */
        .product-actions {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid var(--ice-blue);
        }
        
        .quantity-selector {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }
        
        .qty-btn {
            width: 30px;
            height: 30px;
            border: 1px solid var(--frost-blue);
            background: var(--snow-white);
            color: var(--deep-blue);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.8rem;
        }
        
        .qty-btn:hover {
            background: var(--frost-blue);
            color: var(--snow-white);
        }
        
        .qty-input {
            width: 50px;
            height: 30px;
            text-align: center;
            border: 1px solid var(--frost-blue);
            border-radius: 5px;
            background: var(--snow-white);
            color: var(--deep-blue);
            font-weight: 600;
        }
        
        .action-buttons {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .btn-add-cart, .btn-buy-now {
            padding: 0.6rem 1rem;
            border: none;
            border-radius: 25px;
            font-weight: 600;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .btn-add-cart {
            background: linear-gradient(135deg, var(--winter-blue), var(--frost-blue));
            color: var(--snow-white);
        }
        
        .btn-add-cart:hover {
            background: var(--deep-blue);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }
        
        .btn-buy-now {
            background: linear-gradient(135deg, #ff6b6b, #ee5a52);
            color: var(--snow-white);
        }
        
        .btn-buy-now:hover {
            background: linear-gradient(135deg, #ff5252, #e53935);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(255, 107, 107, 0.3);
        }
        
        .success-flash {
            animation: successFlash 1s ease;
        }
        
        @@keyframes successFlash {
            0%, 100% { background: linear-gradient(135deg, var(--winter-blue), var(--frost-blue)); }
            50% { background: linear-gradient(135deg, #4caf50, #45a049); }
        }
        
        .out-of-stock-actions {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .btn-out-of-stock {
            padding: 0.6rem 1rem;
            border: none;
            border-radius: 25px;
            background: #e0e0e0;
            color: #9e9e9e;
            font-weight: 600;
            font-size: 0.85rem;
            cursor: not-allowed;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        .btn-notify {
            padding: 0.6rem 1rem;
            border: 2px solid var(--frost-blue);
            border-radius: 25px;
            background: var(--snow-white);
            color: var(--deep-blue);
            font-weight: 600;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        .btn-notify:hover {
            background: var(--frost-blue);
            color: var(--snow-white);
        }
        
        .load-more-section {
            text-align: center;
            margin-top: 3rem;
        }
        
        .load-more-btn {
            background: var(--gradient-primary);
            color: var(--snow-white);
            border: none;
            padding: 1rem 2rem;
            border-radius: 25px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .load-more-btn:hover {
            background: var(--deep-blue);
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }
        
        .load-more-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }
        
        .empty-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
            flex-wrap: wrap;
        }

        .btn-primary, .btn-secondary, .btn-outline-primary {
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }
        
            .btn-outline-primary{
            color: #0077cc;
            }
         .btn-outline-primary:hover {
                text-decoration: none;
                color: var(--snow-white);
                transform: translateY(-2px);
         }

        .btn-primary {
            background: var(--gradient-primary);
            color: var(--snow-white);
        }
        
        .btn-primary:hover {
            background: var(--deep-blue);
            text-decoration: none;
            color: var(--snow-white);
            transform: translateY(-2px);
        }
        
        .btn-secondary {
            background: var(--ice-blue);
            color: var(--deep-blue);
            border: 2px solid var(--frost-blue);
        }
        
        .btn-secondary:hover {
            background: var(--frost-blue);
            text-decoration: none;
            color: var(--deep-blue);
            transform: translateY(-2px);
        }
        
        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .floating-snowflake {
                display: none;
            }
            
            .empty-actions {
                flex-direction: column;
                align-items: center;
            }
            
            .btn-primary, .btn-secondary {
                width: 200px;
                justify-content: center;
            }
            
            .action-buttons {
                flex-direction: row;
                justify-content: space-between;
            }
            
            .btn-add-cart, .btn-buy-now {
                flex: 1;
                font-size: 0.8rem;
                padding: 0.5rem 0.8rem;
            }
            
            .quantity-selector {
                margin-bottom: 0.8rem;
            }
            
            .qty-btn {
                width: 28px;
                height: 28px;
                font-size: 0.75rem;
            }
            
            .qty-input {
                width: 45px;
                height: 28px;
            }
        }
        
        @@media (max-width: 480px) {
            .action-buttons {
                flex-direction: column;
                gap: 0.4rem;
            }
            
            .btn-add-cart, .btn-buy-now {
                font-size: 0.75rem;
                padding: 0.5rem;
            }
            
            .btn-text {
                display: none;
            }
        }
        
        /* Loading state for product cards */
        .product-card.loading {
            position: relative;
            pointer-events: none;
        }
        
        .product-card.loading::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .product-card.loading::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 30px;
            height: 30px;
            border: 3px solid var(--frost-blue);
            border-top: 3px solid var(--winter-blue);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            transform: translate(-50%, -50%);
            z-index: 10;
        }
        
        @@keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }
        
        /* Add authentication indicator for cart functionality */
        .user-authenticated {
            display: none;
        }
    </style>
    
    <!-- User authentication indicator for JavaScript -->
    @if (User.Identity.IsAuthenticated)
    {
        <span class="d-none user-authenticated"></span>
    }
}